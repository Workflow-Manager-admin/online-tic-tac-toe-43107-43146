{"is_source_file": true, "format": "JavaScript (React JSX)", "description": "This file is a React component implementing a Tic Tac Toe game with game logic, UI components, state management, and user interaction handling.", "external_files": ["./App.css"], "external_methods": ["sessionStorage.getItem", "sessionStorage.setItem", "sessionStorage.removeItem"], "published": ["App"], "classes": [], "methods": [{"name": "calculateWinner(squares)", "description": "Helper function to determine the game winner based on current squares.", "scope": "", "scopeKind": ""}, {"name": "handleReset", "description": "Function to reset the game board to initial state, preserving player names and history."}, {"name": "handleClearHistory", "description": "Function to clear the game history stored in session storage and reset the game."}, {"name": "handleClick", "description": "Handler invoked when a game board square is clicked; updates game state."}, {"name": "jumpTo", "description": "Handler to navigate to a specific move in game history (time travel)."}, {"name": "handleNameChange", "description": "Handler to update player names based on user input."}, {"name": "Square({ value, onClick })", "description": "Functional component representing a single Tic Tac Toe square.", "scope": "App", "scopeKind": "function"}, {"name": "Board({ squares, onClick })", "description": "Functional component rendering the game grid and squares.", "scope": "App", "scopeKind": "function"}, {"name": "NameInputs({ names, onChange, onCancel, onSave })", "description": "Component for editing player names.", "scope": "App", "scopeKind": "function"}, {"name": "History({ history, onJump, currentStep })", "description": "Component displaying the game move history with navigation buttons.", "scope": "App", "scopeKind": "function"}, {"name": "getStatus", "description": "Helper to generate UI message about current game status."}, {"name": "App()", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["calculateWinner", "sessionStorage.getItem", "sessionStorage.setItem", "sessionStorage.removeItem"], "search-terms": ["tic tac toe React component", "game state management", "session storage", "history navigation", "player name editing"], "state": 2, "file_id": 7, "knowledge_revision": 26, "git_revision": "3cb5a7452fc6392b6d9773eecf412c86f2387648", "revision_history": [{"25": "3cb5a7452fc6392b6d9773eecf412c86f2387648"}, {"26": "3cb5a7452fc6392b6d9773eecf412c86f2387648"}], "ctags": [{"_type": "tag", "name": "App", "path": "/home/kavia/workspace/code-generation/online-tic-tac-toe-43107-43146/tic_tac_toe_frontend/src/App.js", "pattern": "/^export default function App() {$/", "language": "JavaScript", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "Board", "path": "/home/kavia/workspace/code-generation/online-tic-tac-toe-43107-43146/tic_tac_toe_frontend/src/App.js", "pattern": "/^  function Board({ squares, onClick }) {$/", "language": "JavaScript", "kind": "function", "signature": "({ squares, onClick })", "scope": "App", "scopeKind": "function"}, {"_type": "tag", "name": "History", "path": "/home/kavia/workspace/code-generation/online-tic-tac-toe-43107-43146/tic_tac_toe_frontend/src/App.js", "pattern": "/^  function History({ history, onJump, currentStep }) {$/", "language": "JavaScript", "kind": "function", "signature": "({ history, onJump, currentStep })", "scope": "App", "scopeKind": "function"}, {"_type": "tag", "name": "NameInputs", "path": "/home/kavia/workspace/code-generation/online-tic-tac-toe-43107-43146/tic_tac_toe_frontend/src/App.js", "pattern": "/^  function NameInputs({ names, onChange, onCancel, onSave }) {$/", "language": "JavaScript", "kind": "function", "signature": "({ names, onChange, onCancel, onSave })", "scope": "App", "scopeKind": "function"}, {"_type": "tag", "name": "Square", "path": "/home/kavia/workspace/code-generation/online-tic-tac-toe-43107-43146/tic_tac_toe_frontend/src/App.js", "pattern": "/^  function Square({ value, onClick }) {$/", "language": "JavaScript", "kind": "function", "signature": "({ value, onClick })", "scope": "App", "scopeKind": "function"}, {"_type": "tag", "name": "calculateWinner", "path": "/home/kavia/workspace/code-generation/online-tic-tac-toe-43107-43146/tic_tac_toe_frontend/src/App.js", "pattern": "/^function calculateWinner(squares) {$/", "language": "JavaScript", "kind": "function", "signature": "(squares)"}, {"_type": "tag", "name": "current", "path": "/home/kavia/workspace/code-generation/online-tic-tac-toe-43107-43146/tic_tac_toe_frontend/src/App.js", "pattern": "/^          squares={current.squares}$/", "language": "JavaScript", "kind": "field", "scope": "App.squares", "scopeKind": "class"}, {"_type": "tag", "name": "names", "path": "/home/kavia/workspace/code-generation/online-tic-tac-toe-43107-43146/tic_tac_toe_frontend/src/App.js", "pattern": "/^          value={names[0]}$/", "language": "JavaScript", "kind": "field", "scope": "App.NameInputs.value", "scopeKind": "class"}, {"_type": "tag", "name": "names", "path": "/home/kavia/workspace/code-generation/online-tic-tac-toe-43107-43146/tic_tac_toe_frontend/src/App.js", "pattern": "/^          value={names[1]}$/", "language": "JavaScript", "kind": "field", "scope": "App.NameInputs.value", "scopeKind": "class"}, {"_type": "tag", "name": "winner", "path": "/home/kavia/workspace/code-generation/online-tic-tac-toe-43107-43146/tic_tac_toe_frontend/src/App.js", "pattern": "/^          onClick={winner || current.squares.every((sq) => sq) ? () => {} : handleClick}$/", "language": "JavaScript", "kind": "field", "scope": "App.onClick", "scopeKind": "class"}], "hash": "2d20686b7f01ba3d99e05af00ca859ab", "format-version": 4, "code-base-name": "tic_tac_toe_frontend", "filename": "tic_tac_toe_frontend/src/App.js", "fields": [{"name": "squares={current.squares}", "scope": "App.squares", "scopeKind": "class", "description": "unavailable"}, {"name": "value={names[0]}", "scope": "App.NameInputs.value", "scopeKind": "class", "description": "unavailable"}, {"name": "value={names[1]}", "scope": "App.NameInputs.value", "scopeKind": "class", "description": "unavailable"}, {"name": "onClick={winner || current.squares.every((sq) => sq) ? () => {} : handleClick}", "scope": "App.onClick", "scopeKind": "class", "description": "unavailable"}]}